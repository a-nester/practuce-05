{"version":3,"file":"commonHelpers2.js","sources":["../src/js/login.js","../src/main.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\n// Якщо імейл і пароль користувача збігаються, зберігай дані з форми при сабміті\n// у локальне сховище і змінюй кнопку login на logout і роби поля введення\n// недоступними для змін.\n// При перезавантаженні сторінки, якщо користувач залогінений, ми маємо бачити logout-кнопку\n// та недоступні для зміни поля з даними користувача.\n// Клік по кнопці logout повертає все до початкового вигляду і видаляє дані користувача\n// З локального сховища.\n// Якщо введені дані не збігаються з потрібними даними, викликати аlert і\n// повідомляти про помилку.\n\nconst USER_DATA = {\n  email: 'user@mail.com',\n  password: 'secret',\n};\n\nconst form = document.querySelector('.login-form');\nconst button = document.querySelector('.login-btn');\nconst LOCAL_STORAGE_KEY = 'login-form';\n\nconst userEmail = form.elements.email;\nconst userPassword = form.elements.password;\n\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(event) {\n  event.preventDefault();\n  if (button.textContent === 'Logout') {\n    localStorage.removeItem(LOCAL_STORAGE_KEY);\n    form.reset();\n    userEmail.removeAttribute(\"readonly\");\n    userPassword.removeAttribute(\"readonly\");\n    button.textContent = \"Login\";\n    return;\n  }\n\n  const userEmailValue = userEmail.value.trim();\n  const userPasswordValue = userPassword.value.trim();\n\n  if (!userEmailValue || !userPasswordValue) {\n    iziToast.warning({\n      title: 'Caution',\n      message: 'You need to fill all fields',\n      position: 'topRight',\n    });\n    return;\n  }\n  if (\n    userEmailValue !== USER_DATA.email ||\n    userPasswordValue !== USER_DATA.password\n  ) {\n    iziToast.error({\n      title: 'Error',\n      message: 'Wrong login or password',\n    });\n    return;\n  }\n  localStorage.setItem(\n    LOCAL_STORAGE_KEY,\n    JSON.stringify({ email: userEmailValue, password: userPasswordValue })\n  );\n    updateForm();\n}\n\nconst saveData = localStorage.getItem(LOCAL_STORAGE_KEY)\n\nif (saveData) {\n  const parsedData = JSON.parse(saveData);\n  userEmail.value = parsedData.email ?? \"\";\n  userPassword.value = parsedData.password ?? \"\";\n  updateForm();\n}\n\n\nfunction updateForm () {\n  button.textContent = 'Logout';\n  userEmail.setAttribute('readonly', true);\n  userPassword.setAttribute('readonly', true);\n};","// import \"./js/promise\"\nimport './js/login';\n\n\n// 3. Додай відображення дати і часу в реальному часі\n\nconst date = document.querySelector(\".date span\")\n\ndate.textContent = new Date().toLocaleString()\nsetInterval(() => date.textContent = new Date().toLocaleString(), 1000)"],"names":["USER_DATA","form","button","LOCAL_STORAGE_KEY","userEmail","userPassword","onSubmit","event","userEmailValue","userPasswordValue","iziToast","updateForm","saveData","parsedData","date"],"mappings":"oFAaA,MAAMA,EAAY,CAChB,MAAO,gBACP,SAAU,QACZ,EAEMC,EAAO,SAAS,cAAc,aAAa,EAC3CC,EAAS,SAAS,cAAc,YAAY,EAC5CC,EAAoB,aAEpBC,EAAYH,EAAK,SAAS,MAC1BI,EAAeJ,EAAK,SAAS,SAEnCA,EAAK,iBAAiB,SAAUK,CAAQ,EAExC,SAASA,EAASC,EAAO,CAEvB,GADAA,EAAM,eAAc,EAChBL,EAAO,cAAgB,SAAU,CACnC,aAAa,WAAWC,CAAiB,EACzCF,EAAK,MAAK,EACVG,EAAU,gBAAgB,UAAU,EACpCC,EAAa,gBAAgB,UAAU,EACvCH,EAAO,YAAc,QACrB,MACD,CAED,MAAMM,EAAiBJ,EAAU,MAAM,KAAI,EACrCK,EAAoBJ,EAAa,MAAM,KAAI,EAEjD,GAAI,CAACG,GAAkB,CAACC,EAAmB,CACzCC,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,8BACT,SAAU,UAChB,CAAK,EACD,MACD,CACD,GACEF,IAAmBR,EAAU,OAC7BS,IAAsBT,EAAU,SAChC,CACAU,EAAS,MAAM,CACb,MAAO,QACP,QAAS,yBACf,CAAK,EACD,MACD,CACD,aAAa,QACXP,EACA,KAAK,UAAU,CAAE,MAAOK,EAAgB,SAAUC,EAAmB,CACzE,EACIE,GACJ,CAEA,MAAMC,EAAW,aAAa,QAAQT,CAAiB,EAEvD,GAAIS,EAAU,CACZ,MAAMC,EAAa,KAAK,MAAMD,CAAQ,EACtCR,EAAU,MAAQS,EAAW,OAAS,GACtCR,EAAa,MAAQQ,EAAW,UAAY,GAC5CF,GACF,CAGA,SAASA,GAAc,CACrBT,EAAO,YAAc,SACrBE,EAAU,aAAa,WAAY,EAAI,EACvCC,EAAa,aAAa,WAAY,EAAI,CAC5C,CC1EA,MAAMS,EAAO,SAAS,cAAc,YAAY,EAEhDA,EAAK,YAAc,IAAI,KAAM,EAAC,eAAgB,EAC9C,YAAY,IAAMA,EAAK,YAAc,IAAI,KAAM,EAAC,eAAc,EAAI,GAAI"}